name: Versioning module

on:
  workflow_call:
    inputs:
      plugin-path:
        required: true
        type: string
      plugin:
        required: true
        type: string
      tag-skip:
        required: true
        type: boolean
      default-release:
        required: true
        type: string
      skip-release:
        required: true
        type: boolean


jobs:
  bump-version:
    name: Bump Version & Create GitHub Tag
    runs-on: ubuntu-latest
    outputs:
      new-version: ${{ steps.version-bump.outputs.newTag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # necessary to get newly created tag above
          ref: ${{ github.ref_name }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Automated Version Bump
        id: version-bump
        uses: phips28/gh-action-bump-version@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PACKAGEJSON_DIR: ${{ inputs.plugin-path }}
        with:
          commit-message: "CI: bumps version to {{version}} [skip ci]"
          tag-prefix:  '${{ inputs.plugin }}/v'
          default: '${{ inputs.default-release }}'
          skip-tag:  '${{ inputs.tag-skip }}'
          rc-wording: 'alpha, RELEASE, BETA'
          major-wording: 'MAJOR'
          minor-wording: 'MINOR'
          check-last-commit-only: true

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [ bump-version ]
    if: needs.bump-version.outputs.new-version != '' && !inputs.skip-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # necessary to get newly created tag above
          ref: ${{ github.ref_name }}
      - name: New Version
        working-directory: ${{ inputs.plugin-path }}
        env:
          NEW_VERSION: ${{ steps.bump-version.outputs.new-version }}
        run: echo "new version $NEW_VERSION"

      - name: Create tag and release
        uses: ncipollo/release-action@v1
        env:
          PACKAGEJSON_DIR: ${{ inputs.plugin-path }}
        with:
          name: ${{ needs.bump-version.outputs.new-version }}
          tag: ${{ needs.bump-version.outputs.new-version }}